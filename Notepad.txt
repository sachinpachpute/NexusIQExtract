=RIGHT(GET.WORKBOOK(1),LEN(GET.WORKBOOK(1))-FIND("]",GET.WORKBOOK(1),1))


=INDEX(GET.WORKBOOK(1),COLUMN(INDIRECT("2:16")),1)

=INDEX(INDIRECT("'" & C8 & "'!H:H"), MATCH(C9, INDIRECT("'" & C8 & "'!B:B"), 0))

=INDEX(ComponentData, MATCH(0, COUNTIF($C$8:C8, ComponentData), 0))

=COUNTIF(INDIRECT("'" & C8 & "'!E:E"), "Architecture-Quality")

=INDIRECT("'" & E29 & "'!B:B")
=INDIRECT("'" & E29 & "'!B2:B")
=IF(E29="", "", E29 & "," & TEXTJOIN(",", TRUE, INDIRECT("'" & E29 & "'!B2:B")))

=IF(F12<>"", SUM(INDIRECT("'"&F12&"'!M:M")), "")

=IF(F12="All Applications", SUMPRODUCT(SUMIF(INDIRECT("'"&Sheet1:Sheet3&"'!M:M"), "<>")), IF(F12<>"", SUM(INDIRECT("'"&F12&"'!M:M")), ""))
=IF(F12="All Applications", SUM(INDIRECT("'"&F$2:F$51&"'!M:M")), IF(F12<>"", SUM(INDIRECT("'"&F12&"'!M:M")), ""))


=IF(E29<>"All Applications", INDIRECT("'" & E29 & "'!B:B"), "")

=E29="All Applications"



=IF(F12<>"All Applications", INDIRECT("'" & F12 & "'!B:B"), "")

=COUNTIF(INDIRECT("'" & F12 & "'!E:E"), "Security-Critical")
=IF(F12<>"All Applications", COUNTIF(INDIRECT("'" & F12 & "'!E:E"), "Security-Critical"), "")

=IF(F12<>"All Applications", INDEX(INDIRECT("'" & F12 & "'!B:B"), MATCH(F30, INDIRECT("'" & F12 & "'!E:E"), 0)), "")
=IF(F12<>"All Applications", FILTER(INDIRECT("'" & F12 & "'!B:B"), INDIRECT("'" & F12 & "'!E:E")=F30), "")
=IF(F12<>"All Applications", INDEX(INDIRECT("'" & F12 & "'!B:B"), MATCH(F30, INDIRECT("'" & F12 & "'!E:E"), 0)), "")

=IF(F12<>"All Applications",
    COUNTIF(INDIRECT("'" & F12 & "'!E:E"), "Security-Critical"),
    SUM(COUNTIF(INDIRECT("'" & Z1:Z30 & "'!E:E"), "Security-Critical")))

=SUM(COUNTIF(INDIRECT("'" & mic:refdata & "'!E:E"), "Security-Critical"))

=SUM(IF(ISNUMBER(MATCH(Z1:Z30, INDIRECT("'" & Z1:Z30 & "'!B:B"), 0)), COUNTIF(INDIRECT("'" & Z1:Z30 & "'!E:E"), "Security-Critical"), 0))

=IF(F12<>"All Applications", INDEX(INDIRECT("'" & F12 & "'!H:H"), MATCH(F30, INDIRECT("'" & F12 & "'!B:B"), 0)), ZZ100)
=IFERROR(IF(F12<>"All Applications", INDEX(INDIRECT("'" & F12 & "'!H:H"), MATCH(F30, INDIRECT("'" & F12 & "'!B:B"), 0)), 0), 0)


=COUNTIF(Sheet1!E:E, "Security-Critical") + COUNTIF(Sheet2!E:E, "Security-Critical") + COUNTIF(Sheet3!E:E, "Security-Critical")
=SUMPRODUCT(COUNTIF(INDIRECT("'" & Z2:Z32 & "'!E:E"), "Security-Critical"))

=IFERROR(INDEX(INDIRECT("'" & F12 & "'!G:G"), MATCH(F30, INDIRECT("'" & F12 & "'!B:B"), 0)), 0)

=IFERROR(INDEX(INDIRECT("'" & F12 & "'!G:G"), SMALL(IF(INDIRECT("'" & F12 & "'!B:B")=F30, ROW(INDIRECT("'" & F12 & "'!B:B"))-ROW(INDIRECT("'" & F12 & "'!B1")), ""), ROW(1:1))), "")

=IFERROR(INDEX(INDIRECT("'" & F12 & "'!G:G"), SMALL(IF(INDIRECT("'" & F12 & "'!B:B")=F30, ROW(INDIRECT("'" & F12 & "'!B:B"))-ROW(INDIRECT("'" & F12 & "'!B1")), ""), ROW(1:1))+1), "")
=IFERROR(INDEX(INDIRECT("'" & F12 & "'!G:G"), MATCH(1, (INDIRECT("'" & F12 & "'!B:B")=F30)*(ROW(INDIRECT("'" & F12 & "'!B:B"))>ROW(INDIRECT("'" & F12 & "'!B1"))), 0)), "")

=SUMPRODUCT(--(INDIRECT("'" & F12 & "'!A:A")=F30), --(INDIRECT("'" & F12 & "'!C:C")>=INDIRECT("'" & F12 & "'!B:B")))
=IF(ROW(A1)>COUNTIF(INDIRECT("'" & F12 & "'!B:B"), F30), "", INDEX(INDIRECT("'" & F12 & "'!B:D"), SMALL(IF(INDIRECT("'" & F12 & "'!B:B")=F30, ROW(INDIRECT("'" & F12 & "'!B:B"))-ROW(INDIRECT("'" & F12 & "'!B1"))+1), ROW(A1)), COLUMN(A1)))
=IF(ROW(B60)>COUNTIF(INDIRECT("'" & F12 & "'!B:B"), F30), "", INDEX(INDIRECT("'" & F12 & "'!B:D"), SMALL(IF(INDIRECT("'" & F12 & "'!B:B")=F30, ROW(INDIRECT("'" & F12 & "'!B:B"))-ROW(INDIRECT("'" & F12 & "'!B1"))+1), ROW(B60)), COLUMN(B60)))
=IF(ROW(B60)-ROW($B$60)+1>COUNTIF(INDIRECT("'" & F12 & "'!B:B"), F30), "", INDEX(INDIRECT("'" & F12 & "'!B:D"), MATCH(F30, INDIRECT("'" & F12 & "'!B:B"), 0), COLUMN(B60)))
------------------------------------------------------------

try {
            HttpClient httpClient = HttpClients.createDefault();
            HttpGet request = new HttpGet(baseUrl + "/rest/api/content/" + pageId + "?expand=body.view");
            request.addHeader("Authorization", "Basic " + java.util.Base64.getEncoder().encodeToString((username + ":" + password).getBytes()));

            HttpResponse response = httpClient.execute(request);
            String responseBody = EntityUtils.toString(response.getEntity());

            // Parse the JSON response to extract the table data
            // You'll need to implement this part based on your specific requirements
            // For example, use a JSON parser library or regex to extract the table content

            System.out.println("Table data from Confluence page:");
            // Print the extracted table data to the console
            // Modify this part to format and display the data as needed
        } catch (Exception e) {
            e.printStackTrace();
        }


https://confluence.vocalink.co.uk/display/OT/Test-1

229346885

----------------

import org.apache.http.HttpResponse;
import org.apache.http.client.HttpClient;
import org.apache.http.client.methods.HttpGet;
import org.apache.http.impl.client.HttpClients;
import org.apache.http.util.EntityUtils;

public class ConfluenceTableReader {
    public static void main(String[] args) {
        String baseUrl = "https://confluence.vocalink.co.uk"; // Replace with your Confluence base URL
        String username = "your_username"; // Replace with your Confluence username
        String password = "your_password"; // Replace with your Confluence password
        String pageId = "229346885"; // Replace with the actual page ID

        try {
            HttpClient httpClient = HttpClients.createDefault();
            HttpGet request = new HttpGet(baseUrl + "/rest/api/content/" + pageId + "?expand=body.view");
            request.addHeader("Authorization", "Basic " + java.util.Base64.getEncoder().encodeToString((username + ":" + password).getBytes()));

            HttpResponse response = httpClient.execute(request);
            String responseBody = EntityUtils.toString(response.getEntity());

            // Parse the JSON response to extract the table data
            // You'll need to implement this part based on your specific requirements
            // For example, use a JSON parser library or regex to extract the table content

            System.out.println("Table data from Confluence page:");
            // Print the extracted table data to the console
            // Modify this part to format and display the data as needed
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
}


-------

{"id":"229183421","type":"attachment","status":"current","title":"Book1.xlsx","body":{"view":{"value":"","representation":"storage","_expandable":{"webresource":"","content":"/rest/api/content/229183421"}},"_expandable":{"editor":"","export_view":"","styled_view":"","storage":"","anonymous_export_view":""}},"metadata":{"mediaType":"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"},"extensions":{"mediaType":"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet","fileSize":16191,"comment":""},"_links":{"webui":"/display/OT/Test-1?preview=%2F229346885%2F229183421%2FBook1.xlsx","download":"/download/attachments/229346885/Book1.xlsx?version=1&modificationDate=1712140370122&api=v2","collection":"/rest/api/content","base":"https://confluence.vocalink.co.uk","context":"","self":"https://confluence.vocalink.co.uk/rest/api/content/229183421"},"_expandable":{"container":"/rest/api/content/229346885","operations":"","children":"/rest/api/content/229183421/child","restrictions":"/rest/api/content/229183421/restriction/byOperation","history":"/rest/api/content/229183421/history","ancestors":"","version":"","descendants":"/rest/api/content/229183421/descendant","space":"/rest/api/space/OT"}}
